#! /bin/sh
# A script to search a subsection in the Fortran standard
# and open the corresponding pages
# Vincent Magnin, 2022-10-24
# Other contributors: msz59
# Last modifications: vmagnin 2022-10-26
# Tested in Ubuntu 22.04
# Verified with the shellcheck linter

# Strict mode for Bash:
#set -euo pipefail

# Put here the path to your Fortran Standard PDF:
readonly standard='18-007r1.pdf'
# Put here the page of the final index:
readonly index_page='616'

# Set up your PDF viewer and its options:
readonly viewer='okular' vieweropts='-p'
#readonly viewer='evince' vieweropts='-i'

usage(){
    echo "Usage: ${0} [OPTION]... [PATTERN]"
    echo
    echo 'fss is a small shell script searching a string in the titles'
    echo 'of the subsections of the Fortran standard, and opening'
    echo 'the pages in a PDF viewer.'
    echo
    echo 'Options:'
    echo '  -h       help'
    echo
    echo 'Examples:'
    echo '  $ ./fss abs'
    echo '  $ ./fss "abs \("'
    echo
    echo 'MIT license'
    echo 'https://github.com/vmagnin/Fortran-Standard-Search'
}

# Command line analysis:
while getopts h option ; do
    case "${option}" in
        h) usage ; exit 0 ;;           # help
        ?) echo ; usage ; exit 2 ;;    # unknown options
    esac
done
# Let's jummp after the options arguments:
shift $((OPTIND - 1))
# Analysis of the other arguments:
if [ ${#} -eq 0 ]; then
    # No argument => opens the index of the standard:
    ${viewer} "${vieweropts}" "${index_page}" "${standard}" &
    exit 0
else
    readonly intrinsic="${1}"
fi

readonly grep_options='--color always --cache --ignore-case --page-number -P'

# Perl regular expressions:
# This regex will detect strings like "12.5 blabla", ""12.5.1 blabla", "12.5.1.2 blabla", etc.
readonly grep_regex="\d+\.\d+\s+${intrinsic}"
#readonly grep_regex="\d+\.\d+\s+\w*${intrinsic}\w*\s*\("
#readonly grep_regex="\d+\.\d+\s+${intrinsic}\s*\("

lines=$(pdfgrep ${grep_options} "${grep_regex}"  "${standard}")

if [ "${lines}" = "" ]; then
  echo 'String not found'
  ${viewer} "${vieweropts}" "${index_page}" "${standard}" &
  exit 1
else
  # Display the result of the pdfgrep command:
  echo "${lines}"
fi

# In the pdfgrep results, the number at the beginning of each line, followed by a ":", is the line number in the PDF:
# 355:15     16.9.2        ABS (A)
# We create a list with only the page numbers (field 1, separator ":"):
pages=$(echo "${lines}"  | cut -f 1 -d ':')

# And we open each page in the Okular PDF viewer:
for that_page in ${pages}
do
  ${viewer} "${vieweropts}" "${that_page}" "${standard}" &
done
